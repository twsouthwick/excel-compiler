%{
open ExcelCompiler.Syntax
%}

// Regular tokens
%token <int> INT
%token <float> FLOAT

// Misc tokens
%token PLUS
%token EQUALS
%token EOF

// This is the type of the data produced by a successful reduction of the 'start'
// symbol:


// These are the rules of the grammar along with the F# code of the
// actions executed as rules are reduced.

// The start token becomes a parser function in the compiled code:
%start start
%type <ExcelCompiler.Syntax.Formula> start

%%

start: Formula EOF { $1 }

Formula:
	| EQUALS Expression { Expression($2) }

op:
	| PLUS				{ Add }

Expression:
	| Term				{ Term($1) }
	| Term op Term		{ Terms($1, $2, $3) }

Term:
	| Factor			{ Factor($1) }

Factor:
	| INT				{ Int($1) }
	| FLOAT				{ Float($1) }